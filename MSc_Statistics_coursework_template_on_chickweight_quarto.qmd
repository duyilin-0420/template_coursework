---
title: "Coursework Template On ChickWeight Dataset"
subtitle: 'MSc in Statistics 2025/26, Imperial College London'
author: "Yilin Du"
format:
  html:
    toc: true
    highlight: tango
    self-contained: true
    df-print: paged
  pdf: default
format-links: false
bibliography: "MSc_Statistics_coursework_template_on_chickweight_quarto.bib" 
---

<style type="text/css">
h1{
  font-size: 24pt;
}
h2{
  font-size: 18pt;
}
body{
  font-size: 12pt;
}
</style>

```{r setup, include = FALSE, tidy=TRUE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
include_solutions <- TRUE
```
```{r setup2, include=FALSE, tidy=TRUE}
require(rmarkdown)
require(knitr)
require(kableExtra)
# Put any library imports and other preamble here.
```


# Basic Report about ChickWeight Dataset.(Table & Figure & Labels...)

In this chapter we seek to generate some useful visual information about the ChickWeight Dataset

**Part a. Load the ChickWeight Dataset**  

The chickweight is an inbuilt dataset in R. So we can use what we have learned before to load it by using "::"
```{r}
chickweight <- datasets::ChickWeight
```
Use "?ChickWeight" in concole to get some basic information about this dataset. Like the Description, Format, Details, Examples, etc. And we know the ChickWeight data frame has 578 rows and 4 columns from an experiment on the effect of diet on early growth of chicks' weight. 


**Part b. Tables and nicer Tables**   
How many chicks of each diet type do we have?
```{r}
table(chickweight$Diet)
```
We can create one nicer table showing the type of diet and the count clearly, and provide one label to it to reference later. See below @tbl-chickweight.
```{r}
#| label: tbl-chickweight
#| tbl-cap: "amount of chicks of each diet type"
diet_type_counts <- table(chickweight$Diet)
knitr::kable(diet_type_counts, col.names = c("Diet Type", "Count"))
```

**Part c. Figures**

In the following figure we plot the weight changes corresponding to the increases of time (See @fig-1). And also we add the categories on each diet on this plot (See @fig-2).

```{r echo=FALSE}

### Question 1b

# Sort the samples in ascending order
sorted_samples <- sort(cauchy_samples)

# Calculate the cumulative probabilities for each sample
cumulative_probs <- (1:num_samples) / num_samples

x_values <- seq(-100, 100,  length.out = 1000)
cdf_values <- pcauchy(x_values)

# Plot the empirical CDF
plot(sorted_samples, 
     cumulative_probs, 
     type = "s", 
     xlab = "x", 
     ylab = "Empirical CDF", 
     main = "Empirical CDF of Standard Cauchy Distribution", 
     lwd = 2, lty = 1, xlim = c(-100,100))
lines(x_values, cdf_values, type = "l", 
      xlab = "x", ylab = "CDF", main = "CDF of Standard Cauchy Distribution", 
      col = 'red', lty = 2)
```

**Part c.**  We shall use the samples to compute the empirical cdf for the values $x = 0.5, 1, 10$.  

```{r echo=FALSE}

### Question 1c

calculate_ecdf <- function(x) {
    return(sum(sorted_samples <= x)/num_samples)
}

df <- data.frame(x = c(0.5, 1.0, 10.0), 
                ecdf = c(calculate_ecdf(0.5), 
                         calculate_ecdf(1.0), 
                         calculate_ecdf(10.0))
                )
kbl(df,
    caption = 'Empirical CDF', 
    label = 'ecdf',
    digits = 2) %>%
  kable_styling(
    bootstrap_options = c("striped", "hover", "condensed"),
    font_size = 12)
```


# Code appendix

Rather than re-paste all the code to the appendix, here is a trick which makes the markdown file output all the code (without) execution in the appendix, without any duplication.

Please keep in mind to format the code so that the entire code is clearly visible and does not run into the margins of the pdf version.  

```{r ref.label=knitr::all_labels(), echo = T, eval = F}
```

# References
